/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath "com.netflix.nebula:gradle-ospackage-plugin:4.4.0"
    classpath 'de.undercouch:gradle-download-task:3.2.0'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE'
  }
}

repositories {
  mavenLocal()
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'distribution'
apply plugin: 'nebula.ospackage'
apply plugin: 'org.springframework.boot'
apply plugin: 'project-report'

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext.src = 'src/main/resources/'
ext.distPackageName = 'ambari-infra-solr-metrics'

repositories {
  mavenCentral()
  jcenter()
}
task wrapper(type: Wrapper) {
  gradleVersion = '3.2'
}

distributions {
  main {
    contents {
      baseName = 'ams-solr-metrics-mpack'
      from { src + 'mpack'}

      from { src + 'mpack/mpack.json' }
    }
  }
}

distTar {
  destinationDir = file(buildDir)
  compression = Compression.GZIP
  extension = 'tar.gz'
}

task buildTar(dependsOn: [clean, distTar]) {
}

jar {
  baseName = 'ambari-solr-metrics-sink'
  version = '1.0.0'
}

configurations {
  compile.exclude module: 'spring-boot-starter-logging'
}

dependencies {
  compile("org.springframework.boot:spring-boot-starter:1.5.6.RELEASE")
  compile("org.springframework.boot:spring-boot-starter-log4j2:1.3.8.RELEASE")
  compile("org.apache.ambari:ambari-metrics-common:2.5.1.0.0")
}

task createPackage(type: Copy, dependsOn: [buildTar, build]) {
  into "$buildDir/package/"
  into('libs') {
    from "$buildDir/libs/"
  }
  from "$buildDir/resources/main/log4j2.xml"
  from "$buildDir/resources/main/infra-solr-metrics.properties"
  from "$buildDir/resources/main/scripts"
  exclude '*.original'
}

ospackage {
  packageName = "${distPackageName}"
  version = "1.0.0"
  release = "1"
  os = LINUX
  user = 'root'
  permissionGroup = 'root'
  license = "APL2"
  summary = "External Apache Solr sink to collect data in AMS."
  directory("/var/log/${distPackageName}", 644)
  directory("/var/run/${distPackageName}", 644)
  directory("/usr/lib/${distPackageName}", 644)
  directory("/etc/${distPackageName}/conf", 644)

  into "/usr/lib/${distPackageName}"

  from "${buildDir}/package/infra-solr-metrics.sh"
  from "${buildDir}/package/infra-solr-metrics-env.sh"

  from ("${buildDir}/package/libs") {
    into "libs"
  }
  from("${buildDir}/package/log4j2.xml") {
    into "/etc/${distPackageName}/conf"
  }
  from("${buildDir}/package/infra-solr-metrics.properties") {
    into "/etc/${distPackageName}/conf"
  }
}

task rpm(type: Rpm, dependsOn: [createPackage]) {
}

task deb(type: Deb, dependsOn: [createPackage]) {
}